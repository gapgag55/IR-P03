{"ast":null,"code":"import _toConsumableArray from \"/Users/kopkap/Desktop/ir-p03/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/kopkap/Desktop/ir-p03/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kopkap/Desktop/ir-p03/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kopkap/Desktop/ir-p03/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kopkap/Desktop/ir-p03/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kopkap/Desktop/ir-p03/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kopkap/Desktop/ir-p03/client/src/containers/sentiment.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport striptags from 'striptags';\nimport { Headspan, Container, Wrapper, Head, FlexRow, FlexRowBetween } from '../utility';\nimport Box from '../components/box';\nimport Loadmore from '../components/loadmore';\n\nvar Sentiment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Sentiment, _Component);\n\n  function Sentiment(props) {\n    var _this;\n\n    _classCallCheck(this, Sentiment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sentiment).call(this, props));\n\n    _this.nextPage = function () {\n      var page = _this.state.page;\n\n      _this.setState({\n        page: page + 1\n      }, function () {\n        _this.loadItems();\n      });\n    };\n\n    _this.loadItems = function () {\n      var page = _this.state.page;\n      var keyword = _this.props.match.params.keyword;\n      axios.get(\"http://localhost:5000/api/pantip/\".concat(keyword, \"/\").concat(page)).then(function (result) {\n        var items = result['data'];\n        items.map(function (item) {\n          var id = item.id,\n              text = item.text,\n              type = item.type,\n              tag = item.tag;\n          text = striptags(text.replace(/[&]nbsp[;]/gi, \" \"));\n\n          if (type == 'pos') {\n            _this.setState({\n              goodItems: _toConsumableArray(_this.state.goodItems).concat([{\n                id: id,\n                title: text,\n                tag: tag\n              }])\n            });\n          } else if (type == 'neg') {\n            _this.setState({\n              badItems: _toConsumableArray(_this.state.badItems).concat([{\n                id: id,\n                title: text,\n                tag: tag\n              }])\n            });\n          } else if (type == 'nue') {\n            _this.setState({\n              neutralItems: _toConsumableArray(_this.state.neutralItems).concat([{\n                id: id,\n                title: text,\n                tag: tag\n              }])\n            });\n          }\n        });\n      });\n    };\n\n    _this.state = {\n      goodItems: [],\n      neutralItems: [],\n      badItems: [],\n      page: 1\n    };\n    return _this;\n  }\n\n  _createClass(Sentiment, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadItems();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          badItems = _this$state.badItems,\n          goodItems = _this$state.goodItems,\n          neutralItems = _this$state.neutralItems;\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(FlexRowBetween, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Negative Comments\"), React.createElement(Headspan, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, badItems.length, \" items\"))), badItems.map(function (item) {\n        return React.createElement(Box, {\n          item: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        style: {\n          padding: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(FlexRowBetween, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Positive Comments\"), React.createElement(Headspan, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, goodItems.length, \" items\"))), goodItems.map(function (item) {\n        return React.createElement(Box, {\n          item: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        style: {\n          padding: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(FlexRowBetween, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Neutral Comments\"), React.createElement(Headspan, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, neutralItems.length, \" items\"))), neutralItems.map(function (item) {\n        return React.createElement(Box, {\n          item: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        });\n      }))), React.createElement(Loadmore, {\n        onClick: this.nextPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Sentiment;\n}(Component);\n\nexport default Sentiment;","map":{"version":3,"sources":["/Users/kopkap/Desktop/ir-p03/client/src/containers/sentiment.js"],"names":["React","Component","axios","striptags","Headspan","Container","Wrapper","Head","FlexRow","FlexRowBetween","Box","Loadmore","Sentiment","props","nextPage","page","state","setState","loadItems","keyword","match","params","get","then","result","items","map","item","id","text","type","tag","replace","goodItems","title","badItems","neutralItems","width","length","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport striptags from 'striptags'\nimport {\n  Headspan,\n  Container,\n  Wrapper,\n  Head,\n  FlexRow,\n  FlexRowBetween\n} from '../utility';\n\nimport Box from '../components/box';\nimport Loadmore from '../components/loadmore';\n\nclass Sentiment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      goodItems: [],\n      neutralItems: [],\n      badItems: [],\n      page: 1,\n    };\n  }\n\n  componentWillMount() {\n    this.loadItems()\n  }\n\n  nextPage = () => {\n    const { page } = this.state;\n\n    this.setState({\n      page: page + 1\n    }, () => {\n      this.loadItems()\n    })\n  }\n\n  loadItems = () => {\n    const { page } = this.state;\n    const { keyword } = this.props.match.params;\n\n    axios.get(`http://localhost:5000/api/pantip/${keyword}/${page}`).then(result => {\n  \n      const items = result['data'];\n\n      items.map(item => {\n        let { id, text, type, tag } = item\n        text = striptags(text.replace(/[&]nbsp[;]/gi,\" \"))\n\n        if (type == 'pos') {\n    \n          this.setState({\n            goodItems: [\n              ...this.state.goodItems, {id, title: text, tag}],\n          })\n\n        } else if (type == 'neg') {\n          \n          this.setState({\n            badItems: [...this.state.badItems, {id, title: text, tag}],\n          })\n\n        } else if (type == 'nue') {\n          \n          this.setState({\n            neutralItems: [...this.state.neutralItems, {id, title: text, tag}],\n          })\n\n        }\n\n      })\n    });\n  }\n\n  render() {\n    const { badItems, goodItems, neutralItems } = this.state;\n\n    return (\n      <Container>\n        <FlexRow>\n          <Wrapper>\n            <Head>\n              <FlexRowBetween style={{ width: '100%' }}>\n                <div>Negative Comments</div>\n                <Headspan>{badItems.length} items</Headspan>\n              </FlexRowBetween>\n            </Head>\n            {badItems.map(item => (\n              <Box item={item} />\n            ))}\n          </Wrapper>\n          <div style={{ padding: '10px' }}></div>\n          <Wrapper>\n            <Head>\n              <FlexRowBetween style={{ width: '100%' }}>\n                <div>Positive Comments</div>\n                <Headspan>{goodItems.length} items</Headspan>\n              </FlexRowBetween>\n            </Head>\n            {goodItems.map(item => (\n              <Box item={item} />\n            ))}\n          </Wrapper>\n          <div style={{ padding: '10px' }}></div>\n          <Wrapper>\n            <Head>\n              <FlexRowBetween style={{ width: '100%' }}>\n                <div>Neutral Comments</div>\n                <Headspan>{neutralItems.length} items</Headspan>\n              </FlexRowBetween>\n            </Head>\n            {neutralItems.map(item => (\n              <Box item={item} />\n            ))}\n          </Wrapper>\n        </FlexRow>\n        {<Loadmore onClick={this.nextPage} />}\n      </Container>\n    );\n  }\n}\n\nexport default Sentiment;\n"]},"metadata":{},"sourceType":"module"}